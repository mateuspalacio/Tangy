@page "/learnBlazor/BindProp"
<h2 class="text-success">Individual Product</h2>
<div class="row">
<div class="col-6 border p-3">
    <h3 class="text-primary">Product Playground</h3><hr />

    <div>Active: <input type="checkbox" @bind-value="@product.IsActive" checked="@(product.IsActive?"checked":null)"> <br /></div>
    <div>Price: <input type="number" @bind-value="@product.Price" @bind-value:event="oninput" /> <br /></div>
    <div>
        Product Properties:
        <select @bind="selectedProp">
            @foreach (var prop in @product.ProductProperties)
            {
                <option value="@prop.Key">@prop.Key</option>
            }
        </select>
    </div>
</div>
<div class="col-6 border p-3">
    <h3 class="text-primary">Product Summary</h3><hr />
    Name: @product.Name<br />
    Active: @product.IsActive <br />
    Price: @product.Price <br />

    This product is: @(@product.IsActive?"Active":"Inactive") <br />
    Property Selected: @selectedProp <br />
    @if (!String.IsNullOrWhiteSpace(selectedProp))
    {
        <p>Property Value : @product.ProductProperties.FirstOrDefault(u => u.Key == selectedProp).Value</p>
    }
</div>

<div class="col-12">
    <h2 class="text-success">Product Table</h2>
    <table class="table table-striped">
        <tbody>
                @foreach(var prod in Products)
                {
                    <tr>
                        <td>
                            <input type="text" @bind-value="prod.Name" @bind-value:event="oninput"/>
                        </td>
                        <td>
                            <input type="text" @bind-value="prod.Price" @bind-value:event="oninput"/>
                        </td>
                        <td>
                            <input type="checkbox" @bind-value="prod.IsActive" checked="@(prod.IsActive ? "checked" : null)"/>
                        </td>
                    </tr>
                }
        </tbody>
    </table>
    <br /><br />
    <h2>Product Summary</h2>
    @foreach(var prod in Products)
                {
                   <p>@prod.Name [@prod.Price] is @(prod.IsActive ? "Active" : "Inactive" )</p>
                }
</div>
</div>
@*Price: <input type="number" @bind="@product.Price" @bind:event="oninput" />
*@
@code {
    private string selectedProp = "";
    Demo_Product product = new()
        {
            Id = 1,
            Name = "Rose Candle",
            IsActive = true,
            Price = 10.99,
            ProductProperties = new List<Demo_ProductProp>()
            {
                new Demo_ProductProp { Id = 1, Key="Color", Value = "Black"},
                new Demo_ProductProp { Id = 2, Key="Flavor", Value = "Rose Jasmine"},
                new Demo_ProductProp { Id = 3, Key="Size", Value = "20oz"}

            }
        };

    List<Demo_Product> Products = new();

    protected override void OnInitialized()
    {
        Products.Add(new()
            {
                Id = 1,
                Name = "Midnight Blaze",
                IsActive = false,
                Price = 11.00,
                ProductProperties = new()
                {
                new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Rose"},
                     new Demo_ProductProp { Id = 2, Key = "Size", Value = "20oz"},
                    new Demo_ProductProp { Id = 3, Key = "Color", Value="Purple" }
                }
            });

        Products.Add(new()
        {
            Id = 2,
            Name = "Blossom Lily",
            IsActive = true,
            Price = 10.90,
            ProductProperties = new()
            {
                new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
                new Demo_ProductProp { Id = 2, Key = "Size", Value = "18oz" },
                new Demo_ProductProp {Id = 3,Key = "Color",Value = "White"}
            }
        });
    }
}
