@page "/learnBlazor/demoproduct" 
@* doesn't depend on folder name, I can call it anything I want *@

<h2 class="text-primary">DemoProduct</h2>
<p>Favorites Total: @SelectedFavoriteCount</p>
<p>Last selected product: @LastSelectedProductName</p>
<div class="border p-2 mt-2" style="background-color:azure">
    <div class="row">
        @foreach(var prod in Products)
        {
           <_Product Product="@prod" OnFavoriteSelection="FavoriteCountUpdate" OnLastSelectedProductChange="SelectedProductUpdate">
               <FirstFragment>#1</FirstFragment>
               <SecondFragment>#2</SecondFragment>
           </_Product>
        }
    </div>
</div>
@code {
    List<Demo_Product> Products = new();
    private int SelectedFavoriteCount { get; set; } = 0;
    private string LastSelectedProductName { get; set; }

    protected override void OnInitialized()
    {
        Products.Add(new()
            {
                Id = 1,
                Name = "Midnight Blaze",
                IsActive = false,
                Price = 11.00,
                ProductProperties = new()
                {
                new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Rose"},
                     new Demo_ProductProp { Id = 2, Key = "Size", Value = "20oz"},
                    new Demo_ProductProp { Id = 3, Key = "Color", Value="Purple" }
                }
            });

        Products.Add(new()
        {
            Id = 2,
            Name = "Blossom Lily",
            IsActive = true,
            Price = 10.90,
            ProductProperties = new()
            {
                new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
                new Demo_ProductProp { Id = 2, Key = "Size", Value = "18oz" },
                new Demo_ProductProp {Id = 3,Key = "Color",Value = "White"}
            }
        });
    }

    protected void FavoriteCountUpdate(bool isSelected)
    {
        if (isSelected)
        {
            SelectedFavoriteCount++;
        }
        else
        {
            SelectedFavoriteCount--;
        }
    }
    protected void SelectedProductUpdate(string productName)
    {
        LastSelectedProductName = productName;
    }
}
